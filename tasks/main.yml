---
- name: Install required packages
  apt:
    name={{ item }}
    state=present
  with_items:
    - nfs-common
    - apache2
    - libapache2-mod-php5
    - php5-gd
    - php5-mysql
    - php-cas
    - php5-ldap

- name: Enable Apache modules
  shell: a2enmod {{ item }}
  notify: restart apache
  with_items:
    - rewrite
    - ssl

- name: Temporarily stop Apache for local configuration
  service:
    name=apache2
    state=stopped
  notify: restart apache

- name: remount the NFS share in case it's been corrupted by previous configuration
  mount:
    name=/var/www
    src="{{ lookup('file','../../nfs/vars/float_ip') }}:/data/export"
    fstype=nfs
    opts="rw,vers=3"
    state={{ item }}
  notify: restart apache
  with_items:
    - unmounted
    - mounted

- name: Create tls directory for apache
  file:
    path=/etc/apache2/tls
    state=directory

- name: Upload ssl files
  copy:
    src={{ certificate_prefix }}.{{ item.0 }}
    dest=/etc/apache2/{{ certificate_path }}/{{ certificate_prefix }}.{{ item.0 }}
    owner=root
    group=root
    mode={{ item.1 }}
  notify: restart apache
  with_together:
    - [ crt, key ]
    - [ '0644', '0600' ]

- name: Configure Apache
  template:
    src=apache.j2
    dest=/etc/apache2/sites-available/default
    owner=root
    group=root
    mode=0644
  notify: restart apache

- name: Check whether drupal is already installed
  stat:
    path=/var/www/index.php
  register: drupal

- name: Check whether the modules are already installed
  stat:
    path=/var/www/sites/all/modules/{{ item.name }}
  register: result
  with_items:
    - "{{ modules }}"

- name: Get required modules
  shell: wget http://ftp.drupal.org/files/projects/{{ item.item.name }}-{{ item.item.version }}.tar.gz
    chdir=/tmp
    creates=/tmp/{{ item.item.name }}-{{ item.item.version }}.tar.gz
  with_items:
    - "{{ result.results }}"
  when: "primary is defined and not {{ item.stat.exists }}"

- name: Unpack required modules
  shell: tar xzf /tmp/{{ item.item.name }}-{{ item.item.version }}.tar.gz
    chdir=/var/www/sites/all/modules
    creates=/var/www/sites/all/modules/{{ item.item.name }}
  with_items:
    - "{{ result.results }}"
  when: "primary is defined and not {{ item.stat.exists }}"
